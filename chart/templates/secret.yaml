{{- if or (.Values.secret.arn) (.Values.secret.license.arn) (.Values.secret.rds.arn) }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ .Release.Name }}-aws-secret-provider
spec:
  provider: aws
  secretObjects:
    {{- if .Values.secret.arn }}
    - secretName: "{{ .Release.Name }}-aws-secret"
      type: Opaque
      data:
      - key: password
        objectName: initial_admin_password
    {{- end }}
    {{- if .Values.secret.rds.arn }}
    - secretName: "{{ .Release.Name }}-aws-rds-secret"
      type: Opaque
      data:
      - key: hostname
        objectName: db-host
      - key: port
        objectName: db-port
      - key: name
        objectName: db-name
      - key: username
        objectName: db-username
      - key: password
        objectName: db-password
    {{- end }}
  parameters:
    objects:  |
      {{- if .Values.secret.arn }}
      - objectName: "{{ .Values.secret.arn }}"
        objectType: "secretsmanager"
        jmesPath:
          - path: "initial_admin_password"
            objectAlias: "initial_admin_password"
      {{- end }}
      {{- if .Values.secret.license.arn }}
      - objectName: "{{ .Values.secret.license.arn }}"
        objectAlias: "license_lic"
      {{- end }}
      {{- if .Values.secret.rds.arn }}
      - objectName: "{{ .Values.secret.rds.arn }}"
        objectType: "secretsmanager"
        jmesPath:
          - path: "host"
            objectAlias: "db-host"
          - path: "port"
            objectAlias: "db-port"
          - path: "name"
            objectAlias: "db-name"
          - path: "username"
            objectAlias: "db-username"
          - path: "password"
            objectAlias: "db-password"
      {{- end }}
{{- end }}
